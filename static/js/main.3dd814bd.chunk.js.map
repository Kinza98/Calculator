{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Calculator.js"],"names":["App","className","Calculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Screen","props","value","type","Keyboard","handleKeys","handleResult","onClick","state","current_val","length","isNaN","setState","result","eval","e","current","target","toString","res","this","Component"],"mappings":"oPAYeA,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,+CACA,cAACC,EAAA,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,sqCCbA,SAASc,OAAOC,GAAQ,IACbC,EAASD,EAATC,MACP,OACI,mEAAMlB,UAAU,cAAhB,SACI,oEAAOmB,KAAK,OAAOD,MAAOA,MAMtC,SAASE,SAASH,GAAQ,IACfI,EAA4BJ,EAA5BI,WAAYC,EAAgBL,EAAhBK,aACnB,OACI,mEAAKtB,UAAU,WAAf,UAEI,kEAAKA,UAAU,YAAf,SACI,qEAAQA,UAAU,UAAUkB,MAAM,QAAQK,QAASF,EAAnD,qBAGJ,mEAAKrB,UAAU,WAAf,UACI,qEAAQkB,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQrB,UAAU,UAAUkB,MAAM,IAAIK,QAASF,EAA/C,kBAGJ,mEAAKrB,UAAU,WAAf,UACI,qEAAQkB,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQrB,UAAU,UAAUkB,MAAM,IAAIK,QAASF,EAA/C,kBAGJ,mEAAKrB,UAAU,WAAf,UACI,qEAAQkB,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQrB,UAAU,UAAUkB,MAAM,IAAIK,QAASF,EAA/C,kBAGJ,mEAAKrB,UAAU,WAAf,UACI,qEAAQkB,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQH,MAAM,IAAIK,QAASF,EAA3B,eACA,qEAAQrB,UAAU,UAAUkB,MAAM,IAAIK,QAASF,EAA/C,eACA,qEAAQrB,UAAU,UAAUkB,MAAM,IAAIK,QAASD,EAA/C,qB,IAMVrB,W,8yBACFuB,MAAO,CACHN,MAAM,G,MAGVI,aAAe,WACX,IAAMG,YAAc,MAAKD,MAAMN,MAC/B,GAAGO,YAAYC,OAAS,EACpB,GAAGC,MAAMF,YAAYA,YAAYC,OAAO,KAAOC,MAAMF,YAAY,IAC7D,MAAKG,SAAS,CACVV,MAAM,eAET,CAED,IAAMW,OAASC,KAAK,MAAKN,MAAMN,OAASY,KAAK,MAAKN,MAAMN,OAAS,MAAKM,MAAMN,MAE5E,MAAKU,SAAS,CACVV,MAAMW,W,MAMtBR,WAAa,SAACU,GACV,IAAMC,EAASD,EAAEE,OAAOf,MAAMgB,WAC1BC,EAAiB,SAAXH,EAAsB,EACX,GAApB,MAAKR,MAAMN,OAAkC,UAApB,MAAKM,MAAMN,MAAsBc,EAAS,MAAKR,MAAMN,MAAQc,EACvF,MAAKJ,SAAS,CACVV,MAAMiB,K,yOAIV,OACI,mEAAKnC,UAAU,aAAf,UACI,2DAACgB,OAAD,CAAQE,MAAOkB,KAAKZ,MAAMN,QAC1B,2DAACE,SAAD,CAAUC,WAAYe,KAAKf,WAAYC,aAAcc,KAAKd,sB,YAnCjDe,8CA0CVpC,mC","file":"static/js/main.3dd814bd.chunk.js","sourcesContent":["import './App.css';\nimport Calculator from './Calculator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>My Calculator</h2>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react'\r\n\r\n\r\nfunction Screen(props) {\r\n    const {value} = props\r\n    return (\r\n        <form className=\"main-screen\">\r\n            <input type=\"text\" value={value}/>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nfunction Keyboard(props) {\r\n    const {handleKeys, handleResult} = props;\r\n    return (\r\n        <div className=\"keyboard\">\r\n\r\n            <div className=\"reset-row\">\r\n                <button className=\"op-keys\" value=\"reset\" onClick={handleKeys}>Reset</button>\r\n            </div>\r\n\r\n            <div className=\"keys-row\">\r\n                <button value=\"7\" onClick={handleKeys}>7</button>\r\n                <button value=\"8\" onClick={handleKeys}>8</button>\r\n                <button value=\"9\" onClick={handleKeys}>9</button>\r\n                <button className=\"op-keys\" value=\"/\" onClick={handleKeys}>/</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"4\" onClick={handleKeys}>4</button>\r\n                <button value=\"5\" onClick={handleKeys}>5</button>\r\n                <button value=\"6\" onClick={handleKeys}>6</button>\r\n                <button className=\"op-keys\" value=\"*\" onClick={handleKeys}>X</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"1\" onClick={handleKeys}>1</button>\r\n                <button value=\"2\" onClick={handleKeys}>2</button>\r\n                <button value=\"3\" onClick={handleKeys}>3</button>\r\n                <button className=\"op-keys\" value=\"-\" onClick={handleKeys}>-</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"0\" onClick={handleKeys}>0</button>\r\n                <button value=\".\" onClick={handleKeys}>.</button>\r\n                <button className=\"op-keys\" value=\"+\" onClick={handleKeys}>+</button>\r\n                <button className=\"op-keys\" value=\"=\" onClick={handleResult}>=</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Calculator extends Component {\r\n    state= {\r\n        value:0\r\n    }\r\n\r\n    handleResult = () => {\r\n        const current_val = this.state.value;\r\n        if(current_val.length > 0){\r\n            if(isNaN(current_val[current_val.length-1]) || isNaN(current_val[0])){\r\n                this.setState({\r\n                    value:'Error!'\r\n                })\r\n            }else{\r\n                \r\n                const result = eval(this.state.value) ? eval(this.state.value) : this.state.value ;\r\n                \r\n                this.setState({\r\n                    value:result\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleKeys = (e) => {\r\n        const current= e.target.value.toString();\r\n        let res = current == 'reset' ?  0 :\r\n        (this.state.value == 0 || this.state.value == 'Error!' ) ? current: this.state.value + current;\r\n        this.setState({\r\n            value:res\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Screen value={this.state.value}/>\r\n                <Keyboard handleKeys={this.handleKeys} handleResult={this.handleResult}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calculator;"],"sourceRoot":""}