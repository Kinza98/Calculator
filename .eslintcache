[{"C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\index.js":"1","C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\App.js":"2","C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\reportWebVitals.js":"3","C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\Calculator.js":"4"},{"size":500,"mtime":1606235685093,"results":"5","hashOfConfig":"6"},{"size":202,"mtime":1607492884354,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606235685093,"results":"8","hashOfConfig":"6"},{"size":3262,"mtime":1607423842899,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11urkv3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\index.js",[],["20","21"],"C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\App.js",[],"C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\reportWebVitals.js",[],"C:\\Users\\kinza\\Desktop\\Project\\react-basic-practice\\src\\Calculator.js",["22","23","24","25","26"],"import React, { Component } from 'react'\r\n\r\n//calculator screen\r\nfunction Screen(props) {\r\n    const {value} = props\r\n    return (\r\n        <form className=\"main-screen\">\r\n            <input type=\"text\" value={value}/>\r\n        </form>\r\n    )\r\n}\r\n\r\n//main keyboard\r\nfunction Keyboard(props) {\r\n    const {handleKeys, handleResult} = props;\r\n    return (\r\n        <div className=\"keyboard\">\r\n\r\n            <div className=\"reset-row\">\r\n                <button className=\"op-keys\" value=\"reset\" onClick={handleKeys}>Reset</button>\r\n            </div>\r\n\r\n            <div className=\"keys-row\">\r\n                <button value=\"7\" onClick={handleKeys}>7</button>\r\n                <button value=\"8\" onClick={handleKeys}>8</button>\r\n                <button value=\"9\" onClick={handleKeys}>9</button>\r\n                <button className=\"op-keys\" value=\"/\" onClick={handleKeys}>/</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"4\" onClick={handleKeys}>4</button>\r\n                <button value=\"5\" onClick={handleKeys}>5</button>\r\n                <button value=\"6\" onClick={handleKeys}>6</button>\r\n                <button className=\"op-keys\" value=\"*\" onClick={handleKeys}>X</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"1\" onClick={handleKeys}>1</button>\r\n                <button value=\"2\" onClick={handleKeys}>2</button>\r\n                <button value=\"3\" onClick={handleKeys}>3</button>\r\n                <button className=\"op-keys\" value=\"-\" onClick={handleKeys}>-</button>\r\n            </div>\r\n            \r\n            <div className=\"keys-row\">\r\n                <button value=\"0\" onClick={handleKeys}>0</button>\r\n                <button value=\".\" onClick={handleKeys}>.</button>\r\n                <button className=\"op-keys\" value=\"+\" onClick={handleKeys}>+</button>\r\n                <button className=\"op-keys\" value=\"=\" onClick={handleResult}>=</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Calculator extends Component {\r\n    state= {\r\n        value:0\r\n    }\r\n\r\n    handleResult = () => {\r\n        const current_val = this.state.value;\r\n        if(current_val.length > 0){\r\n            if(isNaN(current_val[current_val.length-1]) || isNaN(current_val[0])){\r\n                this.setState({\r\n                    value:'Error!'\r\n                })\r\n            }else{\r\n                \r\n                const result = eval(this.state.value) ? eval(this.state.value) : this.state.value ;\r\n                \r\n                this.setState({\r\n                    value:result\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleKeys = (e) => {\r\n        const current= e.target.value.toString();\r\n        let res = current == 'reset' ?  0 :\r\n        (this.state.value == 0 || this.state.value == 'Error!' ) ? current: this.state.value + current;\r\n        this.setState({\r\n            value:res\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Screen value={this.state.value}/>\r\n                <Keyboard handleKeys={this.handleKeys} handleResult={this.handleResult}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calculator;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":68,"column":32,"nodeType":"33","messageId":"34","endLine":68,"endColumn":36},{"ruleId":"31","severity":1,"message":"32","line":68,"column":57,"nodeType":"33","messageId":"34","endLine":68,"endColumn":61},{"ruleId":"35","severity":1,"message":"36","line":79,"column":27,"nodeType":"37","messageId":"34","endLine":79,"endColumn":29},{"ruleId":"35","severity":1,"message":"36","line":80,"column":27,"nodeType":"37","messageId":"34","endLine":80,"endColumn":29},{"ruleId":"35","severity":1,"message":"36","line":80,"column":52,"nodeType":"37","messageId":"34","endLine":80,"endColumn":54},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]